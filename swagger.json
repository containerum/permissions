{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "3.0",
  "info": {
    "description": "Permissions service stores user resources and allows to manage access to resources",
    "title": "Permissions API"
  },
  "paths": {
    "/access": {
      "get": {
        "summary": "Returns user accesses to resources.",
        "operationId": "GetResourcesAccesses",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          }
        ]
      }
    },
    "/admin/accesses": {
      "put": {
        "summary": "Assign access level for all user resources. Used for billing purposes.",
        "operationId": "SetResourcesAccesses",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetResourcesAccessesRequest"
            }
          }
        ]
      }
    },
    "/admin/namespaces": {
      "post": {
        "summary": "Create namespace without billing.",
        "operationId": "AdminCreateNamespace",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceAdminCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "namespace created"
          },
          "default": {
            "description": "error"
          }
        }
      }
    },
    "/namespaces/{label}/access": {
      "put": {
        "summary": "Grant namespace permission to user.",
        "operationId": "SetNamespaceAccess",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetResourceAccessRequest"
            }
          },
          {
            "description": "Namespace label",
            "name": "label",
            "in": "path",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete namespace permission to user.",
        "operationId": "DeleteNamespaceAccess",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteResourceAccessRequest"
            }
          },
          {
            "description": "Namespace label",
            "name": "label",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/volumes/{label}/access": {
      "put": {
        "summary": "Grant volume permission to user.",
        "operationId": "SetVolumeAccess",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetResourceAccessRequest"
            }
          },
          {
            "description": "Volume label",
            "name": "label",
            "in": "path",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete volume permission to user.",
        "operationId": "DeleteVolumeAccess",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteResourceAccessRequest"
            }
          },
          {
            "description": "Namespace label",
            "name": "label",
            "in": "path",
            "required": true
          }
        ]
      }
    }
  },
  "definitions": {
    "AccessLevel": {
      "type": "string",
      "enum": [
        "none",
        "read",
        "readdelete",
        "write",
        "owner"
      ]
    },
    "AccessObject": {
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/AccessLevel"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "DeleteResourceAccessRequest": {
      "description": "DeleteUserAccessRequest is a request object for deleting access to resource for user",
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "format": "email",
          "x-go-name": "UserName"
        }
      },
      "x-go-name": "DeleteUserAccessRequest",
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "Namespace": {
      "description": "Namespace describes namespace",
      "type": "object",
      "properties": {
        "cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPU"
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreateTime"
        },
        "delete_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "DeleteTime"
        },
        "deleted": {
          "type": "boolean",
          "x-go-name": "Deleted"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "label": {
          "type": "string",
          "x-go-name": "Label"
        },
        "max_external_services": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxExtServices"
        },
        "max_internal_services": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxIntServices"
        },
        "max_traffic": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxTraffic"
        },
        "owner_user_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "OwnerUserID"
        },
        "ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RAM"
        },
        "tariff_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "TariffID"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          },
          "x-go-name": "Permissions"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-go-name": "Volumes"
        }
      },
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "NamespaceAdminCreateRequest": {
      "description": "NamespaceAdminCreateRequest contains parameters for creating namespace without billing",
      "type": "object",
      "properties": {
        "cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPU"
        },
        "label": {
          "type": "string",
          "x-go-name": "Label"
        },
        "max_ext_services": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxExtServices"
        },
        "max_int_services": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxIntServices"
        },
        "max_traffic": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxTraffic"
        },
        "memory": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Memory"
        }
      },
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "Permission": {
      "description": "Permission represents information about user permission to resource",
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/AccessLevel"
        },
        "access_level_change_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "AccessLevelChangeTime"
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreateTime"
        },
        "kind": {
          "type": "string",
          "x-go-name": "ResourceKind"
        },
        "login": {
          "type": "string",
          "x-go-name": "UserLogin"
        },
        "new_access_level": {
          "$ref": "#/definitions/AccessLevel"
        },
        "perm_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "resource_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "ResourceID"
        },
        "user_id": {
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "ResourceAccesses": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessObject"
          }
        },
        "volume": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessObject"
          }
        }
      }
    },
    "SetResourceAccessRequest": {
      "description": "SetUserAccessRequest is a request object for setting access to resource for user",
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/AccessLevel"
        },
        "username": {
          "type": "string",
          "format": "email",
          "x-go-name": "UserName"
        }
      },
      "x-go-name": "SetUserAccessRequest",
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "SetResourcesAccessesRequest": {
      "description": "SetUserAccessRequest is a request object for setting user accesses",
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/AccessLevel"
        }
      },
      "x-go-name": "SetUserAccessesRequest",
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "Storage": {
      "description": "Storage describes volumes storage",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "ips": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "IPs"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Replicas"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Size"
        },
        "used": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Used"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-go-name": "Volumes"
        }
      },
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "Volume": {
      "description": "Volume describes volume",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "x-go-name": "Active"
        },
        "capacity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Capacity"
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreateTime"
        },
        "delete_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "DeleteTime"
        },
        "deleted": {
          "type": "boolean",
          "x-go-name": "Deleted"
        },
        "gluster_name": {
          "type": "string",
          "x-go-name": "GlusterName"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "label": {
          "type": "string",
          "x-go-name": "Label"
        },
        "namespace_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "NamespaceID"
        },
        "owner_user_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "OwnerUserID"
        },
        "replicas": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Replicas"
        },
        "storage_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "StorageID"
        },
        "tariff_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "TariffID"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          },
          "x-go-name": "Permissions"
        }
      },
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    }
  },
  "parameters": {
    "SubstitutedUserID": {
      "type": "string",
      "format": "uuid",
      "description": "User ID to run actions for admin",
      "name": "user-id",
      "in": "query"
    },
    "UserIDHeader": {
      "type": "string",
      "format": "uuid",
      "name": "X-User-ID",
      "in": "header",
      "required": true
    },
    "UserRoleHeader": {
      "enum": [
        "user",
        "admin"
      ],
      "type": "string",
      "name": "X-User-Role",
      "in": "header",
      "required": true
    }
  }
}
{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Permissions service stores user resources and allows to manage access to resources",
    "title": "Permissions API"
  },
  "paths": {
    "/access": {
      "get": {
        "summary": "Returns user accesses to resources.",
        "operationId": "GetResourcesAccesses",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          }
        ]
      }
    },
    "/admin/accesses": {
      "put": {
        "summary": "Assign access level for all user resources. Used for billing purposes.",
        "operationId": "SetResourcesAccesses",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetResourcesAccessesRequest"
            }
          }
        ]
      }
    },
    "/namespaces/{label}/access": {
      "put": {
        "summary": "Grant namespace permission to user.",
        "operationId": "SetNamespaceAccess",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetResourceAccessRequest"
            }
          },
          {
            "description": "Namespace label",
            "name": "label",
            "in": "path"
          }
        ]
      }
    },
    "/volumes/{label}/access": {
      "put": {
        "summary": "Grant volume permission to user.",
        "operationId": "SetVolumeAccess",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDHeader"
          },
          {
            "$ref": "#/parameters/UserRoleHeader"
          },
          {
            "$ref": "#/parameters/SubstitutedUserID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetResourceAccessRequest"
            }
          },
          {
            "description": "Volume label",
            "name": "label",
            "in": "path"
          }
        ]
      }
    }
  },
  "definitions": {
    "AccessLevel": {
      "type": "string",
      "enum": [
        "none",
        "read",
        "readdelete",
        "write",
        "owner"
      ]
    },
    "AccessObject": {
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/AccessLevel"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "ResourceAccesses": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessObject"
          }
        },
        "volume": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessObject"
          }
        }
      }
    },
    "SetResourceAccessRequest": {
      "description": "SetUserAccessRequest is a request object to set access to resource for user",
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/AccessLevel"
        },
        "username": {
          "type": "string",
          "format": "email",
          "x-go-name": "UserName"
        }
      },
      "x-go-name": "SetUserAccessRequest",
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    },
    "SetResourcesAccessesRequest": {
      "description": "SetUserAccessRequest is a request object for setting user accesses",
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/AccessLevel"
        }
      },
      "x-go-name": "SetUserAccessesRequest",
      "x-go-package": "git.containerum.net/ch/permissions/pkg/model"
    }
  },
  "parameters": {
    "SubstitutedUserID": {
      "type": "string",
      "format": "uuid",
      "description": "User ID to run actions for admin",
      "name": "user-id",
      "in": "query"
    },
    "UserIDHeader": {
      "type": "string",
      "format": "uuid",
      "name": "X-User-ID",
      "in": "header",
      "required": true
    },
    "UserRoleHeader": {
      "enum": [
        "user",
        "admin"
      ],
      "type": "string",
      "name": "X-User-Role",
      "in": "header",
      "required": true
    }
  }
}
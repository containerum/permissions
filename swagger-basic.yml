swagger: "2.0"
definitions:
  AccessLevel:
    type: string
    enum:
      - none
      - read
      - readdelete
      - write
      - owner
  Namespace:
    $ref: "vendor/github.com/containerum/kube-client/swagger.json#/definitions/Namespace"
  ResourceUpdateName:
    $ref: "vendor/github.com/containerum/kube-client/swagger.json#/definitions/ResourceUpdateName"
  ResourceUpdateUserAccess:
    $ref: "vendor/github.com/containerum/kube-client/swagger.json#/definitions/ResourceUpdateUserAccess"
  UserGroup:
    $ref: "vendor/github.com/containerum/kube-client/swagger.json#/definitions/UserGroup"
parameters:
  SubstitutedUserID:
    $ref: "vendor/github.com/containerum/utils/httputil/swagger.json#/parameters/SubstitutedUserID"
  UserIDHeader:
    $ref: "vendor/github.com/containerum/utils/httputil/swagger.json#/parameters/UserIDHeader"
  UserRoleHeader:
    $ref: "vendor/github.com/containerum/utils/httputil/swagger.json#/parameters/UserRoleHeader"
  PageNum:
    name: page
    in: query
    type: integer
    minimum: 0
  PerPageLimit:
    name: per_page
    in: query
    type: integer
    minimum: 0
  Filters:
    name: filter
    in: query
    type: string
    required: false
    description: A set of filters separated with comma. See "dao" package for more information.
  NamespaceID:
    name: namespace
    in: path
    type: string
    format: uuid
    required: true
    description: Resource ID
  ProjectID:
    name: project
    in: path
    type: string
    format: uuid
    required: true
    description: Project ID
  GroupID:
    name: group
    in: path
    type: string
    format: uuid
    required: true
    description: Group ID
responses:
  error:
    description: cherry error
    schema:
      $ref: "vendor/github.com/containerum/cherry/swagger.json#/definitions/Err"